1. React.js
  - 브라우저에서 동작하는 '복잡하고 다양한 기능을 하는 JS'를 쉽게 만들어 내는 기술
  - react는 node.js를 기반으로 돌아가는 기술이기 때문에, node.js 없이는 사용하기 어렵다.
  - Meta가 개발한 오픈소스 JavaScript 라이브러리 이다.
  - 대규모의 웹 서비스의 UI를 더 편하게 개발하기 위해 만들어진 기술
  - 넷플릭스, 페이스북, 인스타, 노션 등..



2. npm
  - Node Packaged Manager
  - 자바 스크립트 프로그래밍 언어를 위한 패키지 관리자
  - node로 만들어진 여러 앱을 편리하게 사용할 수 있는 앱
  - 패키지 관리 : npm은 Node.js 패키지를 설치하고 관리하는 도구로, 다른 개발자들이 작성한 코드 패키지를
  손쉽게 가져와서 사용할 수 있게 한다.
  - 의존성 관리 : 프로젝트가 의존하는 다양한 패키지들을 관리하고, 프로젝트에 필요한 버전을 쉽게 지정할 수 있다.
  

3. 리액트의 특징
  - 컴포넌트를 기반으로 UI를 표현한다.
  - 화면 업데이트 구현이 쉽다
  - 화면 업데이트가 빠르게 처리된다.

4. Vite(비트)
  - 차세대 프론트 엔드 개발 툴

5. 프로젝트 생성
  - npm create vite@latest		-> 들어와서 npm install 해야함.

6. jsx 확장자
  - 자바스크립트 확장판
  - javascript extensions
  - 확장된 자바 스크립트의 문법을 말함

7. React 컴포넌트
  - react 에서 HTML 태그를 반환하는 함수를 컴포넌트 (Components) 라고 부른다.
  - react 에서는 첫 글자를 대문자로 만들어야지만 컴포넌트로 인식한다. header(X) -> Header(O)

8. jsx 주의사항
  - 중괄호 내부에는 자바스크립트 표현식만 넣을 수 있다.
	-> 한 줄의 코드가 특별한 값으로 표현하는
	식으로 넣을 수 있다.
	-> if, for 문 작성 시 오류 발생
  - 숫자, 문자열, 배열 값만 랜더링 된다.
  - 모든 태그는 닫혀 있어야 한다. HTML 태그에서는 <img> , <br> 등은 안닫아도 되었지만, react는 엄격하다.
  - 최상위 태그는 반드시 하나만 존재해야 한다.

9. Props
  - 전달되는 값
  - Properties의 줄임말
  - props 는 부모 컴포넌트에서 자식 컴포넌트로만 전달이 가능하다.
  - 자식에서 부모로 전달하는 것은 불가능하다.





















