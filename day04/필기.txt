2. useReducer 훅
  - 컴포넌트 내부에 새로운 state를 생성하는 훅
  - 모든 useState는 useReducer로 대체 가능

3. 최적화
  - 웹 서비스의 성능을 개선하는 모든 행위를 일컫는다.
  - 아주 단순한 것부터 아주 어려운 방법까지 매우 다양하다.

 3-1. ReactApp 내부의 최적화 방법
  - 컴포넌트 내부의 불필요한 연산 방지
  - 컴포넌트 내부의 불필요한 함수 재생성 방지
  - 컴포넌트의 불필요한 리랜더링 방지

 3-2. useMemo
  - 메모이제이션 기법을 기반으로 불필요한 연산을 최적화하는 리액트 훅

  // param1 : 콜백 함수
  // param2 : deps, deps의 값이 바뀌면 callback 함수를 다시 실행
		그리고 해당 함수가 반환하는 값을 useMemo 는 다시 반환
  let a =  useMemo( () => {return 1}, [ ] );		-> a = 1; 로 받아옴





